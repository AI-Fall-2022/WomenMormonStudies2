{"ast":null,"code":"var _jsxFileName = \"/Users/ronnaksaxena/Desktop/School/Y4S1/Thesis/WomenMormonStudies2/client/src/App.js\";\nimport { BottomNavigation } from \"@mui/material\";\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport MainNavigation from \"./componenet/MainNav.js\";\nimport Search from \"./componenet/Search.js\";\nimport initialDetails from \"./data/initialDetails.js\";\nimport Home from \"./pages/Home\";\nimport Register from \"./pages/Register.js\";\nimport Vision from \"./pages/Vision.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  async function getData() {\n    // Want to wait for fetch request\n    const response = await fetch(\"http://localhost:3000/api\");\n\n    async function getStreamFromBody(body) {\n      const reader = await body.getReader();\n      return new ReadableStream({\n        start(controller) {\n          // The following function handles each data chunk\n          async function push() {\n            // \"done\" is a Boolean and value a \"Uint8Array\"\n            reader.read().then(_ref => {\n              let {\n                done,\n                value\n              } = _ref;\n\n              // If there is no more data to read\n              if (done) {\n                controller.close();\n                return;\n              } // Get the data and send it to the browser via the controller\n\n\n              controller.enqueue(value);\n              push();\n            });\n          }\n\n          push();\n        }\n\n      });\n    } // Ready in request as a strea\n\n\n    const stream = await response.body; // Translate stream -> string -> map\n\n    const result = await new Response(stream, {\n      headers: {\n        'Content-Type': 'text/html'\n      }\n    }).text();\n\n    function getProfiles() {\n      const dataMap = JSON.parse(result); // var profileDetails = dataMap[\"users\"]\n      // return profileDetails\n      // Try to return as array instead\n\n      return Object.values(dataMap);\n    }\n\n    console.log(\"in function\");\n    console.log(getProfiles());\n    return getProfiles();\n  } // Profile data hold array of profile JSON objects\n\n\n  const dataPromise = Promise.resolve(getData());\n  let profileData = Promise.resolve(getData());\n  dataPromise.then(data => {\n    console.log('in promise');\n    console.log(data[0]); // Content had loaded\n\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/search\",\n            element: /*#__PURE__*/_jsxDEV(Search, {\n              details: initialDetails\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/register\",\n            element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/vision\",\n            element: /*#__PURE__*/_jsxDEV(Vision, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BottomNavigation, {\n        children: \" 1 2 3 4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this);\n  }); // console.log('ProfileData:')\n  // console.log(profileData[0]) // write a non retarded way of getting this\n  // console.log(typeof(profileData))\n  // console.log('InitialDetails')\n  // console.log(initialDetails)\n  // console.log(typeof(initialDetails))\n  // Waitiing to fetch profile data\n\n  if (typeof profileDetails == 'undefined' || typeof profileDetails == 'object Promise' || typeof profileDetails == 'Promise') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  } // Content had loaded\n  // else {\n  //   return (\n  //     <Router>\n  //     <Fragment>\n  //       <MainNavigation/>\n  //       <Routes>\n  //         <Route exact path='/' element={<Home/>}>\n  //           {/* <Route exact path='/' element={<Home/>}/> */}\n  //         </Route>\n  //         <Route exact path='/search' element={<Search details={initialDetails}/>}/>\n  //         {/* <Route exact path='/login' element={<Login/>}/> */}\n  //         <Route exact path='/register' element={<Register/>}/>\n  //         <Route exact path='/vision' element={<Vision/>}/>\n  //       </Routes>\n  //     </Fragment>\n  //     <BottomNavigation> 1 2 3 4</BottomNavigation>\n  //   </Router>\n  //   );\n  // }\n\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BottomNavigation","React","useEffect","useState","Fragment","BrowserRouter","Router","Routes","Route","MainNavigation","Search","initialDetails","Home","Register","Vision","App","getData","response","fetch","getStreamFromBody","body","reader","getReader","ReadableStream","start","controller","push","read","then","done","value","close","enqueue","stream","result","Response","headers","text","getProfiles","dataMap","JSON","parse","Object","values","console","log","dataPromise","Promise","resolve","profileData","data","profileDetails"],"sources":["/Users/ronnaksaxena/Desktop/School/Y4S1/Thesis/WomenMormonStudies2/client/src/App.js"],"sourcesContent":["import { BottomNavigation } from \"@mui/material\";\nimport React, {useEffect, useState, Fragment} from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport MainNavigation from \"./componenet/MainNav.js\";\nimport Search from \"./componenet/Search.js\";\nimport initialDetails from \"./data/initialDetails.js\";\nimport Home from \"./pages/Home\";\nimport Register from \"./pages/Register.js\";\nimport Vision from \"./pages/Vision.js\";\n\n\nfunction App() {\n\n  async function getData() {\n    // Want to wait for fetch request\n  const response = await fetch(\"http://localhost:3000/api\")\n  async function getStreamFromBody(body) {\n    const reader = await body.getReader();\n\n    return new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n        async function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(({ done, value }) => {\n            // If there is no more data to read\n            if (done) {\n              controller.close();\n              return;\n            }\n            // Get the data and send it to the browser via the controller\n            controller.enqueue(value);\n            push();\n          });\n        }\n\n        push();\n      },\n    });\n  }\n  // Ready in request as a strea\n  const stream = await (response.body);\n  // Translate stream -> string -> map\n  const result = await new Response(stream, { headers: { 'Content-Type': 'text/html' } }).text()\n  function getProfiles() {\n    const dataMap = JSON.parse(result);\n    // var profileDetails = dataMap[\"users\"]\n    // return profileDetails\n    // Try to return as array instead\n    return Object.values(dataMap);\n  }\n  console.log(\"in function\")\n  console.log(getProfiles())\n  return getProfiles()\n  }\n\n  \n  // Profile data hold array of profile JSON objects\n  const dataPromise = Promise.resolve(getData())\n  let profileData = Promise.resolve(getData())\n  dataPromise.then((data) => {\n    console.log('in promise')\n    console.log(data[0])\n    // Content had loaded\n      return (\n        <Router>\n        <Fragment>\n          <MainNavigation/>\n          <Routes>\n            <Route exact path='/' element={<Home/>}>\n              {/* <Route exact path='/' element={<Home/>}/> */}\n            </Route>\n            <Route exact path='/search' element={<Search details={initialDetails}/>}/>\n            {/* <Route exact path='/login' element={<Login/>}/> */}\n            <Route exact path='/register' element={<Register/>}/>\n            <Route exact path='/vision' element={<Vision/>}/>\n\n          </Routes>\n        </Fragment>\n        <BottomNavigation> 1 2 3 4</BottomNavigation>\n      </Router>\n      );\n  })\n\n  // console.log('ProfileData:')\n  // console.log(profileData[0]) // write a non retarded way of getting this\n  // console.log(typeof(profileData))\n  // console.log('InitialDetails')\n  // console.log(initialDetails)\n  // console.log(typeof(initialDetails))\n\n  // Waitiing to fetch profile data\n  if (typeof(profileDetails) == 'undefined' || typeof(profileDetails) == 'object Promise' || typeof(profileDetails) == 'Promise') {\n    return (\n\n      <div>\n        <p>Loading...</p>\n      </div>\n    )\n  }\n  // Content had loaded\n  // else {\n  //   return (\n  //     <Router>\n  //     <Fragment>\n  //       <MainNavigation/>\n  //       <Routes>\n  //         <Route exact path='/' element={<Home/>}>\n  //           {/* <Route exact path='/' element={<Home/>}/> */}\n  //         </Route>\n  //         <Route exact path='/search' element={<Search details={initialDetails}/>}/>\n  //         {/* <Route exact path='/login' element={<Login/>}/> */}\n  //         <Route exact path='/register' element={<Register/>}/>\n  //         <Route exact path='/vision' element={<Vision/>}/>\n  \n  //       </Routes>\n  //     </Fragment>\n  //     <BottomNavigation> 1 2 3 4</BottomNavigation>\n  //   </Router>\n  //   );\n  // }\n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}