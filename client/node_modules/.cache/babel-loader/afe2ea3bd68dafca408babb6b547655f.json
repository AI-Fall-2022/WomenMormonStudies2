{"ast":null,"code":"import { BottomNavigation } from \"@mui/material\";\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport MainNavigation from \"./componenet/MainNav.js\";\nimport Search from \"./componenet/Search.js\";\nimport initialDetails from \"./data/initialDetails.js\";\nimport Home from \"./pages/Home\";\nimport Register from \"./pages/Register.js\";\nimport Vision from \"./pages/Vision.js\";\nlet profileData;\n\nfunction App() {\n  // const [backendData, setBackendData] = useState([{}])\n  // useEffect(() => {\n  //   fetch(\"http://localhost:3000/api\").then(\n  //   response => response.json\n  //   ).then(\n  //     data => {\n  //       setBackendData(data)\n  //       console.log('tried to fetch')\n  //     }\n  //   )\n  // }, [])\n  // useEffect()\n  // fetch(\"http://localhost:3000/api\").then(\n  //   response => console.log(response.body)\n  // )\n  let profileData;\n  fetch(\"http://localhost:3000/api\").then(response => response.body).then(rb => {\n    const reader = rb.getReader();\n    return new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n        function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(_ref => {\n            let {\n              done,\n              value\n            } = _ref;\n\n            // If there is no more data to read\n            if (done) {\n              controller.close();\n              return;\n            } // Get the data and send it to the browser via the controller\n\n\n            controller.enqueue(value);\n            push();\n          });\n        }\n\n        push();\n      }\n\n    });\n  }).then(stream => // Respond with our stream\n  new Response(stream, {\n    headers: {\n      'Content-Type': 'text/html'\n    }\n  }).text()).then(result => {\n    // Do things with result\n    function getProfiles() {\n      const dataMap = JSON.parse(result);\n      var profileDetails = dataMap[\"users\"];\n      return profileDetails;\n    }\n\n    return getProfiles();\n  }).then(profileArray => {\n    console.log(\"GOT HERE\");\n    console.log(profileArray);\n    profileData = profileArray;\n  });\n  /* <div>\n  \n  {(typeof backendData.users === 'undefined') ? (\n    <p>Loading...</p>\n  ): (\n    backendData.user.map((user, i) => (\n      <p key={i}> {user}</p>\n    ))\n  )}\n  \n  \n  </div> */\n  // return \n  //  (\n  //   <div>\n  // {(typeof backendData.users === 'undefined') ? (\n  //   <p>Loading...</p>\n  // ): (\n  //   backendData.user.map((user, i) => (\n  //     <p key={i}> {user}</p>\n  //   ))\n  // )}\n  // </div>\n  //  )\n  // return (\n  //   <Router>\n  //   <Fragment>\n  //     <MainNavigation/>\n  //     <Routes>\n  //       <Route exact path='/' element={<Home/>}>\n  //         {/* <Route exact path='/' element={<Home/>}/> */}\n  //       </Route>\n  //       <Route exact path='/search' element={<Search details={initialDetails}/>}/>\n  //       {/* <Route exact path='/login' element={<Login/>}/> */}\n  //       <Route exact path='/register' element={<Register/>}/>\n  //       <Route exact path='/vision' element={<Vision/>}/>\n  //     </Routes>\n  //   </Fragment>\n  //   <BottomNavigation> 1 2 3 4</BottomNavigation>\n  // </Router>\n  // );\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BottomNavigation","React","useEffect","useState","Fragment","BrowserRouter","Router","Routes","Route","MainNavigation","Search","initialDetails","Home","Register","Vision","profileData","App","fetch","then","response","body","rb","reader","getReader","ReadableStream","start","controller","push","read","done","value","close","enqueue","stream","Response","headers","text","result","getProfiles","dataMap","JSON","parse","profileDetails","profileArray","console","log"],"sources":["/Users/ronnaksaxena/Desktop/School/Y4S1/Thesis/WomenMormonStudies2/client/src/App.js"],"sourcesContent":["import { BottomNavigation } from \"@mui/material\";\nimport React, {useEffect, useState, Fragment} from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport MainNavigation from \"./componenet/MainNav.js\";\nimport Search from \"./componenet/Search.js\";\nimport initialDetails from \"./data/initialDetails.js\";\nimport Home from \"./pages/Home\";\nimport Register from \"./pages/Register.js\";\nimport Vision from \"./pages/Vision.js\";\n\nlet profileData;\nfunction App() {\n\n  // const [backendData, setBackendData] = useState([{}])\n\n  // useEffect(() => {\n  //   fetch(\"http://localhost:3000/api\").then(\n  //   response => response.json\n  //   ).then(\n  //     data => {\n  //       setBackendData(data)\n  //       console.log('tried to fetch')\n  //     }\n  //   )\n  // }, [])\n\n\n  // useEffect()\n  // fetch(\"http://localhost:3000/api\").then(\n  //   response => console.log(response.body)\n  // )\n  let profileData;\n  fetch(\"http://localhost:3000/api\")\n  .then((response) => response.body)\n  .then((rb) => {\n    const reader = rb.getReader();\n\n    return new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n        function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(({ done, value }) => {\n            // If there is no more data to read\n            if (done) {\n              controller.close();\n              return;\n            }\n            // Get the data and send it to the browser via the controller\n            controller.enqueue(value);\n            push();\n          });\n        }\n\n        push();\n      },\n    });\n  })\n  .then((stream) =>\n    // Respond with our stream\n    new Response(stream, { headers: { 'Content-Type': 'text/html' } }).text()\n  )\n  .then((result) => {\n    // Do things with result\n    \n    function getProfiles() {\n      const dataMap = JSON.parse(result);\n      var profileDetails = dataMap[\"users\"]\n      return profileDetails\n    }\n\n    return getProfiles()\n  }).then((profileArray) => {\n    console.log(\"GOT HERE\");\n    console.log(profileArray);\n    profileData = profileArray\n\n  \n    \n}\n);\n\n\n\n\n/* <div>\n\n{(typeof backendData.users === 'undefined') ? (\n  <p>Loading...</p>\n): (\n  backendData.user.map((user, i) => (\n    <p key={i}> {user}</p>\n  ))\n)}\n\n\n</div> */\n\n// return \n//  (\n//   <div>\n\n// {(typeof backendData.users === 'undefined') ? (\n//   <p>Loading...</p>\n// ): (\n//   backendData.user.map((user, i) => (\n//     <p key={i}> {user}</p>\n//   ))\n// )}\n\n\n// </div>\n//  )\n\n\n// return (\n//   <Router>\n//   <Fragment>\n//     <MainNavigation/>\n//     <Routes>\n//       <Route exact path='/' element={<Home/>}>\n//         {/* <Route exact path='/' element={<Home/>}/> */}\n//       </Route>\n//       <Route exact path='/search' element={<Search details={initialDetails}/>}/>\n//       {/* <Route exact path='/login' element={<Login/>}/> */}\n//       <Route exact path='/register' element={<Register/>}/>\n//       <Route exact path='/vision' element={<Vision/>}/>\n\n//     </Routes>\n//   </Fragment>\n//   <BottomNavigation> 1 2 3 4</BottomNavigation>\n// </Router>\n\n\n// );\n}\n\nexport default App;\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,eAAjC;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,QAApC,QAAmD,OAAnD;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,QAIO,kBAJP;AAKA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAIC,WAAJ;;AACA,SAASC,GAAT,GAAe;EAEb;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA,IAAID,WAAJ;EACAE,KAAK,CAAC,2BAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAD7B,EAECF,IAFD,CAEOG,EAAD,IAAQ;IACZ,MAAMC,MAAM,GAAGD,EAAE,CAACE,SAAH,EAAf;IAEA,OAAO,IAAIC,cAAJ,CAAmB;MACxBC,KAAK,CAACC,UAAD,EAAa;QAChB;QACA,SAASC,IAAT,GAAgB;UACd;UACAL,MAAM,CAACM,IAAP,GAAcV,IAAd,CAAmB,QAAqB;YAAA,IAApB;cAAEW,IAAF;cAAQC;YAAR,CAAoB;;YACtC;YACA,IAAID,IAAJ,EAAU;cACRH,UAAU,CAACK,KAAX;cACA;YACD,CALqC,CAMtC;;;YACAL,UAAU,CAACM,OAAX,CAAmBF,KAAnB;YACAH,IAAI;UACL,CATD;QAUD;;QAEDA,IAAI;MACL;;IAlBuB,CAAnB,CAAP;EAoBD,CAzBD,EA0BCT,IA1BD,CA0BOe,MAAD,IACJ;EACA,IAAIC,QAAJ,CAAaD,MAAb,EAAqB;IAAEE,OAAO,EAAE;MAAE,gBAAgB;IAAlB;EAAX,CAArB,EAAmEC,IAAnE,EA5BF,EA8BClB,IA9BD,CA8BOmB,MAAD,IAAY;IAChB;IAEA,SAASC,WAAT,GAAuB;MACrB,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWJ,MAAX,CAAhB;MACA,IAAIK,cAAc,GAAGH,OAAO,CAAC,OAAD,CAA5B;MACA,OAAOG,cAAP;IACD;;IAED,OAAOJ,WAAW,EAAlB;EACD,CAxCD,EAwCGpB,IAxCH,CAwCSyB,YAAD,IAAkB;IACxBC,OAAO,CAACC,GAAR,CAAY,UAAZ;IACAD,OAAO,CAACC,GAAR,CAAYF,YAAZ;IACA5B,WAAW,GAAG4B,YAAd;EAIH,CA/CC;EAqDF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAGA;AACC;;KA5HQ3B,G;AA8HT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}