{"ast":null,"code":"var _jsxFileName = \"/Users/ronnaksaxena/Desktop/School/Y4S1/Thesis/WomenMormonStudies2/client/src/App.js\";\nimport { BottomNavigation } from \"@mui/material\";\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport MainNavigation from \"./componenet/MainNav.js\";\nimport Search from \"./componenet/Search.js\";\nimport initialDetails from \"./data/initialDetails.js\";\nimport Home from \"./pages/Home\";\nimport Register from \"./pages/Register.js\";\nimport Vision from \"./pages/Vision.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nasync function App() {\n  // Want to wait for fetch request\n  const response = await fetch(\"http://localhost:3000/api\");\n\n  async function getStreamFromBody(body) {\n    const reader = body.getReader();\n    return new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n        async function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(_ref => {\n            let {\n              done,\n              value\n            } = _ref;\n\n            // If there is no more data to read\n            if (done) {\n              controller.close();\n              return;\n            } // Get the data and send it to the browser via the controller\n\n\n            controller.enqueue(value);\n            push();\n          });\n        }\n\n        push();\n      }\n\n    });\n  } // Ready in request as a strea\n\n\n  const stream = await response.body; // Translate stream -> string -> map\n\n  const result = await new Response(stream, {\n    headers: {\n      'Content-Type': 'text/html'\n    }\n  }).text();\n\n  async function getProfiles() {\n    const dataMap = JSON.parse(result);\n    var profileDetails = dataMap[\"users\"];\n    return profileDetails;\n  } // Profile data hold array of profile JSON objects\n\n\n  let profileData = await getProfiles();\n  console.log('ProfileData:');\n  console.log(profileData);\n  console.log(typeof profileData);\n  console.log('InitialDetails');\n  console.log(initialDetails);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/search\",\n          element: /*#__PURE__*/_jsxDEV(Search, {\n            details: profileData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/vision\",\n          element: /*#__PURE__*/_jsxDEV(Vision, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(BottomNavigation, {\n      children: \" 1 2 3 4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BottomNavigation","React","useEffect","useState","Fragment","BrowserRouter","Router","Routes","Route","MainNavigation","Search","initialDetails","Home","Register","Vision","App","response","fetch","getStreamFromBody","body","reader","getReader","ReadableStream","start","controller","push","read","then","done","value","close","enqueue","stream","result","Response","headers","text","getProfiles","dataMap","JSON","parse","profileDetails","profileData","console","log"],"sources":["/Users/ronnaksaxena/Desktop/School/Y4S1/Thesis/WomenMormonStudies2/client/src/App.js"],"sourcesContent":["import { BottomNavigation } from \"@mui/material\";\nimport React, {useEffect, useState, Fragment} from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport MainNavigation from \"./componenet/MainNav.js\";\nimport Search from \"./componenet/Search.js\";\nimport initialDetails from \"./data/initialDetails.js\";\nimport Home from \"./pages/Home\";\nimport Register from \"./pages/Register.js\";\nimport Vision from \"./pages/Vision.js\";\n\n\nasync function App() {\n\n  // Want to wait for fetch request\n  const response = await fetch(\"http://localhost:3000/api\")\n  async function getStreamFromBody(body) {\n    const reader = body.getReader();\n\n    return new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n        async function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(({ done, value }) => {\n            // If there is no more data to read\n            if (done) {\n              controller.close();\n              return;\n            }\n            // Get the data and send it to the browser via the controller\n            controller.enqueue(value);\n            push();\n          });\n        }\n\n        push();\n      },\n    });\n  }\n  // Ready in request as a strea\n  const stream = await (response.body);\n  // Translate stream -> string -> map\n  const result = await new Response(stream, { headers: { 'Content-Type': 'text/html' } }).text()\n  async function getProfiles() {\n    const dataMap = JSON.parse(result);\n    var profileDetails = dataMap[\"users\"]\n    return profileDetails\n  }\n  // Profile data hold array of profile JSON objects\n  let profileData = await getProfiles();\n\n  console.log('ProfileData:')\n  console.log(profileData)\n  console.log(typeof(profileData))\n  console.log('InitialDetails')\n  console.log(initialDetails)\n  return (\n    <Router>\n    <Fragment>\n      <MainNavigation/>\n      <Routes>\n        <Route exact path='/' element={<Home/>}>\n          {/* <Route exact path='/' element={<Home/>}/> */}\n        </Route>\n        <Route exact path='/search' element={<Search details={profileData}/>}/>\n        {/* <Route exact path='/login' element={<Login/>}/> */}\n        <Route exact path='/register' element={<Register/>}/>\n        <Route exact path='/vision' element={<Vision/>}/>\n\n      </Routes>\n    </Fragment>\n    <BottomNavigation> 1 2 3 4</BottomNavigation>\n  </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}