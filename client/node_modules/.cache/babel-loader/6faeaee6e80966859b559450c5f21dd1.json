{"ast":null,"code":"var _jsxFileName = \"/Users/ronnaksaxena/Desktop/School/Y4S1/Thesis/WomenMormonStudies2/client/src/App.js\";\nimport { BottomNavigation } from \"@mui/material\";\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport MainNavigation from \"./componenet/MainNav.js\";\nimport Search from \"./componenet/Search.js\";\nimport initialDetails from \"./data/initialDetails.js\";\nimport Home from \"./pages/Home\";\nimport Register from \"./pages/Register.js\";\nimport Vision from \"./pages/Vision.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet profileData = [];\n\nfunction App() {\n  // const [backendData, setBackendData] = useState([{}])\n  // useEffect(() => {\n  //   fetch(\"http://localhost:3000/api\").then(\n  //   response => response.json\n  //   ).then(\n  //     data => {\n  //       setBackendData(data)\n  //       console.log('tried to fetch')\n  //     }\n  //   )\n  // }, [])\n  // useEffect()\n  // fetch(\"http://localhost:3000/api\").then(\n  //   response => console.log(response.body)\n  // )\n  (async () => {\n    await fetch(\"http://localhost:3000/api\").then(response => response.body).then(rb => {\n      const reader = rb.getReader();\n      return new ReadableStream({\n        start(controller) {\n          // The following function handles each data chunk\n          function push() {\n            // \"done\" is a Boolean and value a \"Uint8Array\"\n            reader.read().then(_ref => {\n              let {\n                done,\n                value\n              } = _ref;\n\n              // If there is no more data to read\n              if (done) {\n                controller.close();\n                return;\n              } // Get the data and send it to the browser via the controller\n\n\n              controller.enqueue(value);\n              push();\n            });\n          }\n\n          push();\n        }\n\n      });\n    }).then(stream => // Respond with our stream\n    new Response(stream, {\n      headers: {\n        'Content-Type': 'text/html'\n      }\n    }).text()).then(result => {\n      // Do things with result\n      function getProfiles() {\n        const dataMap = JSON.parse(result);\n        var profileDetails = dataMap[\"users\"];\n        return profileDetails;\n      }\n\n      return getProfiles();\n    }).then(profileArray => {\n      console.log(\"GOT HERE\");\n      profileData = profileArray;\n      console.log(profileData);\n    });\n  })();\n  /* <div>\n  \n  {(typeof backendData.users === 'undefined') ? (\n    <p>Loading...</p>\n  ): (\n    backendData.user.map((user, i) => (\n      <p key={i}> {user}</p>\n    ))\n  )}\n  \n  \n  </div> */\n  // return \n  //  (\n  //   <div>\n  // {(typeof backendData.users === 'undefined') ? (\n  //   <p>Loading...</p>\n  // ): (\n  //   backendData.user.map((user, i) => (\n  //     <p key={i}> {user}</p>\n  //   ))\n  // )}\n  // </div>\n  //  )\n\n\n  console.log('Before Return');\n  console.log(profileData);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/search\",\n          element: /*#__PURE__*/_jsxDEV(Search, {\n            details: profileData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/vision\",\n          element: /*#__PURE__*/_jsxDEV(Vision, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(BottomNavigation, {\n      children: \" 1 2 3 4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 3\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BottomNavigation","React","useEffect","useState","Fragment","BrowserRouter","Router","Routes","Route","MainNavigation","Search","initialDetails","Home","Register","Vision","profileData","App","fetch","then","response","body","rb","reader","getReader","ReadableStream","start","controller","push","read","done","value","close","enqueue","stream","Response","headers","text","result","getProfiles","dataMap","JSON","parse","profileDetails","profileArray","console","log"],"sources":["/Users/ronnaksaxena/Desktop/School/Y4S1/Thesis/WomenMormonStudies2/client/src/App.js"],"sourcesContent":["import { BottomNavigation } from \"@mui/material\";\nimport React, {useEffect, useState, Fragment} from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport MainNavigation from \"./componenet/MainNav.js\";\nimport Search from \"./componenet/Search.js\";\nimport initialDetails from \"./data/initialDetails.js\";\nimport Home from \"./pages/Home\";\nimport Register from \"./pages/Register.js\";\nimport Vision from \"./pages/Vision.js\";\n\nlet profileData = [];\nfunction App() {\n\n  // const [backendData, setBackendData] = useState([{}])\n\n  // useEffect(() => {\n  //   fetch(\"http://localhost:3000/api\").then(\n  //   response => response.json\n  //   ).then(\n  //     data => {\n  //       setBackendData(data)\n  //       console.log('tried to fetch')\n  //     }\n  //   )\n  // }, [])\n\n\n  // useEffect()\n  // fetch(\"http://localhost:3000/api\").then(\n  //   response => console.log(response.body)\n  // )\n  (async () => {\n  await fetch(\"http://localhost:3000/api\")\n  .then((response) => response.body)\n  .then((rb) => {\n    const reader = rb.getReader();\n\n    return new ReadableStream({\n      start(controller) {\n        // The following function handles each data chunk\n        function push() {\n          // \"done\" is a Boolean and value a \"Uint8Array\"\n          reader.read().then(({ done, value }) => {\n            // If there is no more data to read\n            if (done) {\n              controller.close();\n              return;\n            }\n            // Get the data and send it to the browser via the controller\n            controller.enqueue(value);\n            push();\n          });\n        }\n\n        push();\n      },\n    });\n  })\n  .then((stream) =>\n    // Respond with our stream\n    new Response(stream, { headers: { 'Content-Type': 'text/html' } }).text()\n  )\n  .then((result) => {\n    // Do things with result\n    \n    function getProfiles() {\n      const dataMap = JSON.parse(result);\n      var profileDetails = dataMap[\"users\"]\n      return profileDetails\n    }\n\n    return getProfiles()\n  }).then((profileArray) => {\n    console.log(\"GOT HERE\");\n    profileData = profileArray;\n    console.log(profileData);\n}\n  );\n})();\n\n\n\n\n/* <div>\n\n{(typeof backendData.users === 'undefined') ? (\n  <p>Loading...</p>\n): (\n  backendData.user.map((user, i) => (\n    <p key={i}> {user}</p>\n  ))\n)}\n\n\n</div> */\n\n// return \n//  (\n//   <div>\n\n// {(typeof backendData.users === 'undefined') ? (\n//   <p>Loading...</p>\n// ): (\n//   backendData.user.map((user, i) => (\n//     <p key={i}> {user}</p>\n//   ))\n// )}\n\n\n// </div>\n//  )\nconsole.log('Before Return')\nconsole.log(profileData);\nreturn (\n  <Router>\n  <Fragment>\n    <MainNavigation/>\n    <Routes>\n      <Route exact path='/' element={<Home/>}>\n        {/* <Route exact path='/' element={<Home/>}/> */}\n      </Route>\n      <Route exact path='/search' element={<Search details={profileData}/>}/>\n      {/* <Route exact path='/login' element={<Login/>}/> */}\n      <Route exact path='/register' element={<Register/>}/>\n      <Route exact path='/vision' element={<Vision/>}/>\n\n    </Routes>\n  </Fragment>\n  <BottomNavigation> 1 2 3 4</BottomNavigation>\n</Router>\n\n\n);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}